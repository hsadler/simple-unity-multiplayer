

TODO:
    X add boilerplate files for server
    X get server runnable locally with mock endpoints
    X start Unity client project
    X do simple server implementation for state synching and broadcast
    X write unity class for interacting with game server
    X implement simple game in unity
    X test with multiple clients
    X bugfix high cpu game server issue
    - consider how to prepare and create as a Unity package or just leave as a 
        repo
    - update README


- API:
    - synch data from game-client to game-server
    - synch data from game-server to game-client
- functionality:
    - game state is a single object
    - game state updates are entirely client authoritative
    - all game state client->server synchs result in a broadcast of the 
        updated game state
    - all clients have equal authority to update game state (any deviation 
        from this policy must be implemented on the game-client, such as a 
        "game owner" client which would have the ability to run environment 
        entities, for instance)
- walk-through:
    - client connects with server
    - server synchs inital game state to client
    - player makes input
    - input causes game state mutation
    - game state is synched to server
    - server broadcasts new game state to all connected clients
        